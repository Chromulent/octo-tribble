
# Possible years that need to be removed
# Prefix is always .
# Suffix is null
Array_Year=( "2023"
	"2022"
	"2021"
	"2020"
	"2019"
	"2018"
	"2017"
	"2016"
	"2015"
	"2014"
	"2013"
	"2012"
	"2011"
	"2010"
	"2009"
	"2008"
	"2007"
	"2006"
	"2005"
	"2004"
	"2003"
	"2002"
	"2001"
	"2000"
	"1999"
	"1998"
	"1997"
	"1996"
	"1995"
	"1994"
	"1993"
	"1992"
	"1991"
	"1990"
	"1989"
	"1988"
	"1987"
	"1986"
	"1985"
	"1984"
	"1983"
	"1982"
	"1981"
	"1980"
	"1979"
	"1978"
	"1977"
	"1976"
	"1975"
	"1974"
	"1973"
	"1972"
	"1971"
	"1970"
	"1969"
	"1968"
	"1967"
	"1966"
	"1965"
	"1964"
	"1963"
	"1962"
	"1961"
	"1960"
	"1959"
	"1958"
	"1957"
	"1956"
	"1955"
	"1954"
	"1953"
	"1952"
	"1951"
	"1950"
	"1949"
	"1948"
	"1947"
	"1946"
	"1945"
	"1944"
	"1943"
	"1942"
	"1941"
	"1940"
	"1939"
	"1938"
	"1937"
	"1936"
	"1935"
	"1934"
	"1933"
	"1932"
	"1931"
	"1930"
	"1929"
	"1928"
	"1927"
	"1926"
	"1925"
	"1924"
	"1923"
	"1922"
	"1921"
	"1920"
	"1919"
	"1918"
	"1917"
)

# Resolution Modifiable
# Prefix is always .
# Suffix is p, P, and i
Array_Resolution_Mod=(    "360"
    "480"
    "720"
    "1080"
    "2160"
)

# Resolution Non-Modifiable
# Prefix is always .
# Suffix is null
Array_Resolution_NonMod=(   "4k"
    "4K"
    "SD"
    "SDR"
)

# Quality or source of quality disconnected from source
# Prefix is always .
# Suffix is null
Array_Quality=(   "Bluray-002"
    "Bluray "
    "BluRay"
    "bluray"
    "BDRip"
    "bdrip"
    "BDrip"
    "BRRip"
    "BRrip"
    "BrRip"
    "DVDScr"
    "TELESYNC"
    "TrueHD"
    "internal"
    "WEBRIP"
    "WEBRip"
    "WEB-DL"
    "WEBDL"
    "HDR"
    "HDRip"
    "HDTV"
    "REMUX"
    "XviD"
    #"WEB"
    "BR"
    "DC"
    "DVD"
    "hdr"
)

# Source of the material
# Prefix is always .
# Suffix is null
Array_Source=(     "AMZN"  # Amazon
  "DSNP"  # Disney Plus
  "DSNY"  # Disney Plus
  "HBOM"  # HBO Max
  "HULU"  # Hulu
  "NFLX"  # Netflix
  "AZ"    # Amazon
  "DP"    # Disney Plus
  "DV"    # Disney Video
  "HM"    # HBO Max
  "NF"    # Netflix
  "MA"    # Unknown
)

# Sound Codec
# Prefix is always .
# Suffix is null
Array_Sound=(    "DTS-D"
    "DTS-MA"
    "DTS"
    "THD+A"
    "AC3"
    "AAC5"    
    "AAC"
    "DD+"
    "AAC2.0"
)

# Color Depth Non-Modifiable
# Prefix is always .
# Suffix is null
Array_ColorDepth_NonMod=(   "DV"
    "HDR10"
)

# Color Depth Modifiable Suffix
# Prefix is always .
# Suffix is bit, bIt, bIT, biT, Bit, BIt, BiT, BIT
Array_ColorDepth_Mod_Suffix=(   "bit"
    "bIt"
    "bIT"
    "biT"
    "Bit"
    "BIt"
    "BiT"
    "BIT"
)

# Sound Codec Additonal Qualifiers
# Prefix is always .
# Suffix is null
Array_Sound_Add=(   "DDP5.1 "   # Dolby Digital
    "DDP5"
    "DDP"
    "EC-AC-3"
    "EC-3"
    "Atmos"
    "UHD"
    "S95"
    "EVC"    
    "HEVC-PSA"
    "HEVC"      # Not an additonal sound qualifier but cannot be added to Codec to to prefix complexity 
    "6CH"
    "8CH"
)

# Codec
# Prefix is ., .x, .X, .h, .H, .h., .H., and null
# Suffix is 264 and 265
Array_Codec_Prefix=(    ".H."
    ".h."
    #".H"
    ".h"
    ".X"
    ".x"
    "."
)

# Encoding
# Prefix is always .
# Suffix is null
Array_Encoding=(   "HD-TS"
    "5.1CH"
    "51CH"
    "5.1"
    "CPG"
    "FLAC"
    "YTS.AM"
)

# Conditional Operators
# Prefix is always .
# Suffix is null
Array_CondtOpt=(  "Extended"  
    "EXTENDEUT"
    "THEATRICAL"
    "Upscaled"
    "REMASTERED"
    "CLASSIC"
    "REMUX"
    "REPACK"
    "PROPER"
    "Proper"
    "proper"
    "sample"
    "ENG"
    "GRE"
)

# Etcetera - Other definitions that do not fit into our defined mold
# Prefix is always .
# Suffix is null
Array_ETC=(   "FS97"
    "q22"
    "x260bit"
    "DEPTH"
    "800MB"
    "1400MB"
    "BRRipp"
    "MVGroup.org"
)

# Uploader
# Prefix is always - , Suffix is null
Array_Uploader=(  
    "APEX"
    "AMIABLE"
    "B4ND1T69"
    "BDPLEX"
    "BLOW"
    "BOKUTOX"
    "BONE"
    "b0mbardiers"
    "Bandi"  
    "CMRG"
    "CtrlHD"
    "DTS-JYK"
    "DVSUX"
    "DeceitYIFY"
    "FiDELiO"
    "FLUX"
    "GAZ"
    "GalaxyRG"
    "Ganool"
    "ION10"
    "Joy"
    "Judas"
    "MkvCage.com"
    "MkvCage"
    "NOGRP"
    "NTG"
    "NTb"
    "PECULATE"
    "PHOENiX"
    "RARBG"
    "RARBG"
    "RESTERED"
    "ShAaNi"
    "TrollHD"
    "usury"
    "YTS.LT"
    "YTS.MX"
    "YTSAM"
    "YTS.AM"
    "YTS.AG"
    "cinecalidad.to"
    "ggez"
    "glhf"
    "ggwp"
    "iDiOTS"
    "spark"
    "BAE"
    "DMT"
    "ETRG"
    "EVO"
    "FGT"
    "VPPV"
    "VXT"
    "VoXHD"
    "WDYM"
    "XViD"
    "YIFY"
)

#####===[ Functions
#########################################################################################################

## Replace Underscores in file names with Spaces
source <(curl -L https://gist.githubusercontent.com/Chromulent/8ce9f4080e098b76bff807f501770fc5/raw/e35e2fc2492e87850de95d9ad530b4cbfaf41c5a/Fn_Remove_Underscore.sh)

## Replace spaces in file names
source <(curl -L https://gist.githubusercontent.com/Chromulent/c165809f2cb76850ba7e6787b7184722/raw/0b43995bf7113901c344232d7a78d0100e16b08e/double_RUS.sh)
source <(curl -L https://gist.githubusercontent.com/Chromulent/26d080cd3de80a57fdcbb8c16081a8ee/raw/fa8f6b2537a4082e18914a7bdc5a6b898e9ff06c/triple_RUS.sh)

## Replace periods with Underscores
source <(curl -L https://gist.githubusercontent.com/Chromulent/22b32b1d537a1c47a19b4f67fd9e3cfe/raw/80567d32b31d72a29a9755c90acb41eb7bde5a33/Fn_Replace_Periods_UnderScore.sh)

## Replace Extra Periods with spaces
source <(curl -L https://gist.githubusercontent.com/Chromulent/716518b976eaa5c12891b5d62f6e3375/raw/da1ecb3b765fd5f8c54f212156b3888831739953/Fn_Replace_Extra_Periods.sh)

## Dossier Bulk Function Collection
source <(curl -L https://gist.githubusercontent.com/Chromulent/c43ef5315620f6458ad72a13cac41629/raw/10ee8167c9c453c4915aa44a89f8bf2d0cc7b04f/Dossier_Cleanup_Collection.sh)

sleep 3 ; clear


# Declare this new array
declare -a dotArray=()

# Add all of these arrays to this new array
array_names=('Array_Year' 'Array_Resolution_NonMod' 'Array_Quality' 'Array_Source' 'Array_Sound' 'Array_ColorDepth_NonMod' 'Array_Sound_Add' 'Array_Encoding' 'Array_CondtOpt' 'Array_ETC')

for a in "${array_names[@]}"; do
    declare -n arr="$a"

    for b in "${arr[@]}"; do
        dotArray+=("${b}")
    done
done


echo "${dotArray[@]}"

sleep 3 ; clear


# Remove Parentheses
find . -mindepth 1 -name "*(*" -type f -exec rename "s/\(//g" '{}' \;
find . -mindepth 1 -name "*)*" -type f -exec rename "s/\)//g" '{}' \;

# Remove Brackets 
find . -mindepth 1 -name "*[*" -type f -exec rename "s/\[//g" '{}' \;
find . -mindepth 1 -name "*]*" -type f -exec rename "s/\]//g" '{}' \;

sleep 3 ; clear


# Adjust all files that have our uploaders names with a hyphen as its prefix
for ren in ${Array_Uploader[@]}; do
  hypRename="-$ren"
  for i in *;do
    ## If the file contains the adjusted indicies then remove '-String'
    if [[ "$i" == *"$hypRename"* ]]; then rename "s/$hypRename//g" "$i"; fi
  done
done

sleep 3 ; clear

# Add a dot to the prefix, and iterate through each indicie, adding p, P, i, and null to each file that contains them
for pew in ${Array_Resolution_Mod[@]}; do
  pewPew=".${pew}p"
  pewpew=".${pew}P"
  pewiii=".${pew}i"
  pewnull=".${pew}"
  # For every file
  for i in *;do
    if [[ "$i" == *"$pewPew"* ]]; then  rename "s/$pewPew//g"  "$i"; fi
    if [[ "$i" == *"$pewpew"* ]]; then  rename "s/$pewpew//g"  "$i"; fi
    if [[ "$i" == *"$pewiii"* ]]; then  rename "s/$pewiii//g"  "$i"; fi 
    if [[ "$i" == *"$pewnull"* ]]; then rename "s/$pewnull//g" "$i"; fi  
  done
done

sleep 3 ; clear

# Adjust all files that a speficic prefix, that iterchanges do to the codec's changes over time
for pre in ${Array_Codec_Prefix[@]}; do
  pre_four="${pre}264"
  pre_five="${pre}265"

  for i in *;do
    if [[ "$i" == *"$pre_four"* ]]; then rename "s/$pre_four//g" "$i"; fi
    if [[ "$i" == *"$pre_five"* ]]; then rename "s/$pre_five//g" "$i"; fi
  done
done

sleep 3 ; clear

# Adjust all files that a speficic prefix, that iterchanges do to the codec's changes over time
for suf in ${Array_ColorDepth_Mod_Suffix[@]}; do
  suf_nine="8${suf}"
  suf_elev="10${suf}"
  suf_thir="12${suf}"

  for i in *;do
    if [[ "$i" == *"$suf_thir"* ]]; then rename "s/$suf_thir//g" "$i"; fi
    if [[ "$i" == *"$suf_elev"* ]]; then rename "s/$suf_elev//g" "$i"; fi
    if [[ "$i" == *"$suf_nine"* ]]; then rename "s/$suf_nine//g" "$i"; fi
  done
done

sleep 3 ; clear

for year in ${Array_Year[@]}; do
  spaceYear=" $year"
  hypYear="-$year"
  for i in *;do
    ## If the file contains the adjusted indicies then remove '.String'
    if [[ "$i" == *"$spaceYear"* ]]; then rename "s/$spaceYear//g" "$i"; fi
    if [[ "$i" == *"$hypYear"* ]]; then rename "s/$hypYear//g" "$i"; fi
  done
done

sleep 3 ; clear

# Adjust all files that contain all strings that need a dot as its prefix
for dot in ${dotArray[@]}; do
  dotRename=".$dot"
  for i in *;do
    ## If the file contains the adjusted indicies then remove '.String'
    if [[ "$i" == *"$dotRename"* ]]; then rename "s/$dotRename//g" "$i"; fi
    ## If the file contains the adjusted indicies then remove '-String'  
  done
done

sleep 3 ; clear
